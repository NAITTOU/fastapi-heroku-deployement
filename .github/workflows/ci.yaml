name: Python Application CI

# Trigger workflow on push or pull request to the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    # Run on the latest Ubuntu environment
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f starter/requirements.txt ]; then pip install -r starter/requirements.txt; fi

      # Configure AWS credentials for accessing the Production account
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Set up DVC (Data Version Control)
      - name: Set up DVC
        uses: iterative/setup-dvc@v1

      # Pull data using DVC
      - name: Pull data with DVC
        run: dvc pull -R

      # Run linting with flake8
      - name: Lint code with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 starter/starter --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 starter/starter --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run tests with pytest
      - name: Run tests with pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/starter/starter
          pytest . -vv